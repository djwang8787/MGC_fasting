full.names = TRUE) %>%
tidyverse::map_df(~read.csv(.))
files <- list.files('/Users/djwang/Library/CloudStorage/OneDrive-MandaiWildlifeGroup/Projects/Mekong-giant-catfish_Sandra/Rainfall',
pattern = ".csv$",
recursive = TRUE,
full.names = TRUE) %>%
dplyr::map_df(~read.csv(.))
install.packages("readr")
install.packages("readr")
files
list_csv_files <- list.files(path = "/Users/djwang/Library/CloudStorage/OneDrive-MandaiWildlifeGroup/Projects/Mekong-giant-catfish_Sandra/Rainfall")
df2 <- readr::read_csv(list_csv_files, id = "file_name")
getwd()
df2 <- readr::read_csv(list_csv_files, id = "file_name")
readr::read_csv(list_csv_files, id = "file_name")
df2 = read.csv(file.choose())
df2 = read.csv(file.choose())
df2 = read.csv(file.choose())
df2
list_csv_files <- list.files(path = "/Users/djwang/Library/CloudStorage/OneDrive-MandaiWildlifeGroup/Projects/Mekong-giant-catfish_Sandra/Rainfall")
df2 <- readr::read_csv(list_csv_files, id = "file_name")
df2 = read.csv(file.choose())
files <- list.files('/Users/djwang/Library/CloudStorage/OneDrive-MandaiWildlifeGroup/Projects/Mekong-giant-catfish_Sandra/Rainfall',
pattern = ".csv$",
recursive = TRUE,
full.names = TRUE) %>%
dplyr::map_df(~read.csv(.))
files <- list.files('/Users/djwang/Library/CloudStorage/OneDrive-MandaiWildlifeGroup/Projects/Mekong-giant-catfish_Sandra/Rainfall',
pattern = ".csv$",
recursive = TRUE,
full.names = TRUE)
myfiles = lapply(files, "read.csv")
getwd()
df2 = read.csv(file.choose())
head(df2)
View(df2)
list_csv_files <- list.files(path = "/Users/djwang/Library/CloudStorage/OneDrive-MandaiWildlifeGroup/Projects/Mekong-giant-catfish_Sandra/Rainfall/Rainfall-2021")
df2 <- readr::read_csv(list_csv_files, id = "file_name")
files <- list.files('/Users/djwang/Library/CloudStorage/OneDrive-MandaiWildlifeGroup/Projects/Mekong-giant-catfish_Sandra/Rainfall/Rainfall_2021',
pattern = ".csv$",
recursive = TRUE,
full.names = TRUE)
myfiles = lapply(files, "read.csv")
myfiles
head(data)
tail(data)
get.wd()
getwd()
#### Rain data 2022 ####
rf.2022 = read.csv("/Rainfall/Rainfall-2022/combined-2022-data.csv")
getwd()
#### Rain data 2022 ####
rf.2022 = read.csv("/Users/djwang/Library/CloudStorage/OneDrive-MandaiWildlifeGroup/Projects/Mekong-giant-catfish_Sandra/Rainfall/Rainfall-2022/combined-2022-data.csv")
head(rf.2022)
rf.2022 %>%
group_by(Month) %>%
summarise(mean(Daily.Rainfall.Total..mm.))
pacman::p_load(readr, dplyr, lubridate, lme4, MuMIn, season, gridExtra)
rf.2022 %>%
group_by(Month) %>%
summarise(mean(Daily.Rainfall.Total..mm.))
#### Rain data 2022 ####
rf.2022 = read.csv("Rainfall/Rainfall-2022/combined-2022-data.csv")
rf.2022 %>%
group_by(Month) %>%
summarise(mean(Daily.Rainfall.Total..mm.))
mmodel1
158.5 - (2*1*(1+1)/(39-1-1)) # AIcc 158.3919
mm1.aic = 158.5
mmodel1$fitted.values
mmodel1$glm
nrow(data.monthgrlm2)
nrow(data.monthglm2)
data.monthglm2
mm1.aic = 158.5
mm1.aicc = mm1.aic - (2*1*(1+1)/(39-1-1))
mm1.ll = (2*(1) - mm1.aicc)/2
mm1.ll
mm1.aicc
mmodel2
mmodel2 = monthglm(formula=Eat.prop*6~year, data=data.monthglm2,
mmodel2 = monthglm(formula=Eat.prop*6~year, data=data.monthglm2,
family=poisson(),  offsetmonth=TRUE, refmonth=11) #AIC 159.8
7.079 - (2*4*(4+1)/(39-4-1)) # AIcc 5.902529
159.8 - (2*4*(4+1)/(39-4-1)) # AIcc 5.902529
(2*(4) - 159.8)/2 # LL 0.4605
mmodel3 = monthglm(formula=Eat.prop*6~year + Rainfall, data=data.monthglm2,
family=poisson(),  offsetmonth=TRUE, refmonth=11) #AIC 160.9
mmodel3
160.9 - (2*5*(5+1)/(39-5-1)) # AIcc 5.623818
(2*(5) - 159.0818)/2 # LL 1.279
model.sel(m1, m2, m3)
158.6235 - mm1.aicc
159.0818 - m1.aicc
159.0818 - m1m.aicc
159.0818 - mm1.aicc
exp(-0.5 * 0.2316081)
exp(-0.5 * 0.6899081) # relative LL, 0.8906497
exp(-0.5 * 0.2787) / (1 + exp(-0.5 * 1.286182) + exp(-0.5 * 0.6899081)) # weight: 0.36
exp(-0.5 * 1.286182) / (1 + exp(-0.5 * 0.2316081) + exp(-0.5 * 0.2787)) # weight: 0.22
exp(-0.5 * 0.2316081) / (1 + exp(-0.5 * 0.2316081) + exp(-0.5 * 0.2787)) # weight: 0.22
1 / (1 + exp(-0.5 * 0.2316081) + exp(-0.5 * 0.2787)) # weight: 0.42
1 / (1 + exp(-0.5 * 0.2316081) + exp(-0.5 * 0.6899081)) # weight: 0.3622436
exp(-0.5 * 0.6899081) / (1 + exp(-0.5 * 1.286182) + exp(-0.5 * 0.6899081)) # weight: 0.389416
0.3170452
0.3170452 + 0.389416 + 0.3847778\
0.3170452 + 0.389416 + 0.3847778
mm1.aicc
159.0818 - mm1.aicc #0.6899081
exp(-0.5 * 0.6899081) # relative LL, 0.7082529
exp(-0.5 * 0.6899081) / (1 + exp(-0.5 * 0.2316081) + exp(-0.5 * 0.6899081)) # weight: 0.3170452
exp(-0.5 * 0.2316081) / (1 + exp(-0.5 * 0.2316081) + exp(-0.5 * 0.6899081)) # weight: 0.22
1 / (1 + exp(-0.5 * 0.2316081) + exp(-0.5 * 0.6899081)) # weight: 0.3847778
mm1.rl = exp(-0.5 * 0) # relative likelihood: 1
mm1.rl
mm1.rl / (mm1.rl + exp(-0.5 * 0.2316081) + exp(-0.5 * 0.6899081)) # weight: 0.3847778
mmodel2
mmodel1
exp(-0.5 * 0.2316081)
exp(-0.5 * 0.6899081)
mm1.rl
pacman::p_load(readr, dplyr, lubridate, lme4, MuMIn, season, gridExtra)
# To print/save figures for manuscript use
make_tall_fig = function(object){
filename = paste0(as.character(substitute(object)), ".png")
png.test = png(filename = as.character(filename), width = 19.05, height = 22.23, units = 'cm', res = 300)
gridExtra::grid.arrange(object, newpage = TRUE)
dev.off()
}
make_wide_fig = function(object){
filename = paste0(as.character(substitute(object)), ".png")
png.test = png(filename = as.character(filename), width = 22.23, height = 11.10, units = 'cm', res = 300)
gridExtra::grid.arrange(object, newpage = TRUE)
dev.off()
}
#### Rain data 2022 ####
rf.2022 = read.csv("Rainfall/Rainfall-2022/combined-2022-data.csv")
rf.2022 %>%
group_by(Month) %>%
summarise(mean(Daily.Rainfall.Total..mm.)) ## Need to compile this with the 2022 dataset; Lianne will be compiling.
#### 1. Activity budget; 2019--2021 ####
data = read.csv("catfish.csv")
data = data %>%
dplyr::select(Date, Eating, Not.eating, Normally, Erratically, Dark, Bright, Rainfall)
data = data %>%
dplyr::mutate(Date = as.Date(Date, format = "%m/%d/%Y"),
Year = as.factor(year(Date)),
Week = as.factor(week(Date)),
Month = as.factor(month(Date)),
Eat.prop = Eating/6,
Mek.Monsoon = ifelse(Month %in% c(6:11), 'Southwest', "Northeast"),
SG.Monsoon = ifelse(Month %in% c(6:9), 'Southwest',
ifelse(Month %in% c(12:3), "Northeast", "Transition")))
# Correlation
data %>%
filter(Year == "2021") %>%
dplyr::summarise(fast.color = cor(Eating,Dark),
fast.swim = cor(Eating,Normally))
correl.data = data %>%
filter(Year == "2021")
ggplot(correl.data, aes(x = 1:12)) +
geom_line(aes(y = Normally/6), color = "blue", size = 1., linetype = 2) +
geom_line(aes(y = Dark/6), color = "red", size = 1., linetype = 3) +
geom_line(aes(y = Eat.prop), color = "black", size = 1., linetype = 1) +
geom_point(aes(y = Eat.prop), color = "black", size = 3.5) +
geom_point(aes(y = Eat.prop), color = "white", size = 3.0) +
scale_x_discrete(name ="Month", limits=c(1:12)) +
ylab("Odds of catfish entering fasting cycle") +
theme_minimal()
MannKendall(correl.data$Eating)
pacman::p_load(readr, dplyr, lubridate, lme4, MuMIn, season, gridExtra, Kendall)
library(Kendall)
acf(data.monthglm2$Eat.prop)
pacf(data.monthglm2$Eat.prop)
MannKendall(data.monthglm2$Rainfall)
data.monthglm = data %>%
dplyr::mutate(weight = n(),
month = as.numeric(Month),
year = as.numeric(Year)) %>%
dplyr::select(Eat.prop, month, year)
mmodel = monthglm(formula=Eat.prop~1,
data=data.monthglm,
family=gaussian(),
offsetmonth=TRUE,
refmonth=11)
summary(mmodel)
MannKendall(data.monthglm2$Rainfall)
data.monthglm2 = data %>%
dplyr::mutate(weight = n(),
month = as.numeric(Month),
year = ifelse(Year == "2020", as.numeric("2020"),
ifelse(Year == "2021", as.numeric("2021"),
ifelse(Year == "2018", as.numeric("2018"), as.numeric("2019"))))) %>%
dplyr::select(Eat.prop, month, year, Rainfall, Mek.Monsoon, SG.Monsoon)
mmodel1 = monthglm(formula=Eat.prop*6~1, data=data.monthglm2,
family=poisson(),  offsetmonth=TRUE, refmonth=11) #AIC 158.5
mm1.aic = 158.5
mm1.aicc = mm1.aic - (2*1*(1+1)/(39-1-1))
mm1.ll = (2*(1) - mm1.aicc)/2
mm1.rl = exp(-0.5 * 0) # relative likelihood: 1
mm1.rl / (mm1.rl + exp(-0.5 * 0.2316081) + exp(-0.5 * 0.6899081)) # weight: 0.3847778
mmodel2 = monthglm(formula=Eat.prop*6~year, data=data.monthglm2,
family=poisson(),  offsetmonth=TRUE, refmonth=11) #AIC 159.8
159.8 - (2*4*(4+1)/(39-4-1)) # AIcc 158.6235
(2*(4) - 159.8)/2 # LL -75.9
158.6235 - mm1.aicc # delta; 0.2316081
exp(-0.5 * 0.2316081) # relative LL, 0.8906497
exp(-0.5 * 0.2316081) / (1 + exp(-0.5 * 0.2316081) + exp(-0.5 * 0.6899081)) # weight: 0.3427022
mmodel3 = monthglm(formula=Eat.prop*6~year + Rainfall, data=data.monthglm2,
family=poisson(),  offsetmonth=TRUE, refmonth=11) #AIC 159.0818
160.9 - (2*5*(5+1)/(39-5-1)) # AIcc 159.0818
(2*(5) - 159.0818)/2 # LL -74.5409
159.0818 - mm1.aicc #delta; 0.6899081
exp(-0.5 * 0.6899081) # relative LL, 0.7082529
exp(-0.5 * 0.6899081) / (1 + exp(-0.5 * 0.2316081) + exp(-0.5 * 0.6899081)) # weight: 0.27252
df1 = data.frame(unclass(summary(mmodel1)))
to.plot = data.frame(
odds = exp(df1$month.ests.mean) / (1+exp(df1$month.ests.mean)),
upper = exp(df1$month.ests.upper) / (1+exp(df1$month.ests.upper)),
lower = exp(df1$month.ests.lower) / (1+exp(df1$month.ests.lower))
)
to.plot$upper.ci = to.plot$upper - to.plot$odds
to.plot$lower.ci = to.plot$odds - to.plot$lower
to.plot = to.plot %>% add_row(odds = 0.05614, upper = 0, lower = 0,
upper.ci = 0, lower.ci = 0, .before = 11)
to.plot$a = data.monthglm2$Eat.prop[4:15]
to.plot$b = data.monthglm2$Eat.prop[16:27]
to.plot$c = data.monthglm2$Eat.prop[28:39]
fig1 = ggplot(to.plot, aes(x = 1:12)) +
geom_errorbar(aes(
ymin = odds - lower.ci,
ymax = odds + upper.ci),
width = 0.1) +
geom_line(aes(y = odds), color = "black", size = 1.5) +
geom_point(aes(y = odds), color = "black", size = 3.5) +
geom_point(aes(y = odds), color = "white", size = 3.0) +
scale_x_discrete(name ="Month", limits=c(1:12)) +
ylab("Odds of catfish entering fasting cycle") +
theme_minimal()
fig1
make_wide_fig(fig1)
fig2 = ggplot(to.plot, aes(x = 1:12)) +
geom_errorbar(aes(
ymin = odds - lower.ci,
ymax = odds + upper.ci),
width = 0.1) +
geom_point(aes(y = odds), color = "black", size = 3.5) +
geom_point(aes(y = odds), color = "white", size = 3.0) +
geom_line(aes(y = a), color = "red", size = 1.0, linetype = 4) +
geom_line(aes(y = b), color = "blue", size = 1.0, linetype = 2) +
geom_line(aes(y = c), color = "green", size = 1.5, linetype = 3) +
scale_x_discrete(name ="Month", limits=c(1:12)) +
ylab("Odds of catfish entering fasting cycle") +
theme_minimal()
fig2
make_wide_fig(fig2)
data.monthglm2 %>%
filter(!year == "2018") %>%
ggplot(aes(x=1:36)) +
geom_line(aes(y = Eat.prop*100)) +
geom_point(aes(y = Eat.prop*100)) +
scale_x_discrete(name ="Month", limits=c(1:36)) +
ylab("Proportion of fasting catfish (%)") +
theme_minimal()
#### Mann-Kendall test ####
acf(data.monthglm2$Eat.prop)
pacf(data.monthglm2$Eat.prop)
MannKendall(data.monthglm2$Rainfall)
data3 = read.csv("Mekong_Catfish_Count_Data_2022.csv")
head(data3)
#
# rm.output = model.sel(rm1, rm2, rm3, rm4)
# rm.output # uni-modal has the best fit.
# hour.sel = rep(1:12, times = 1)
#
# rm2.cr = rm2@beta[1] +
#   rm2@beta[2]*cos(2*pi*hour.sel/12)
# plot(rm2.cr)
#
# ##### 1.2 Fine-scale ####
data2 = read.csv("mgc-dataset-2021.csv")
head(data2)
rm(data43)
rm(data3)
#### 1.1a fine-scale 2022 data ####
data2022 = read.csv("Mekong_Catfish_Count_Data_2022.csv")
colnames(data2022)
data2022 %>%
select(!Remark)
data2022 %>%
!select(Remark)
data2022 %>%
!select(Remarks)
data2022[,1:8]
data2022 = data2022[,1:8]
head(data2022)
nrow(data2022)
2160/6
2160/12
tail(data2022)
View(data2022)
data2022 = read.csv("Mekong_Catfish_Count_Data_2022.csv")
data2022 = data2022[1:1944,1:8] # Take away all remarks
#### 1.1a fine-scale 2022 data ####
data2022 = read.csv("Mekong_catfish_binary_data_2022.csv")
data2022 = data2022[1:1944,1:8] # Take away all remarks
data2022[is.na(data2022)] = 0
nrow(data2022)
1944/6/2
##### 1.2 Fine-scale ####
data2 = read.csv("mgc-dataset-2021.csv")
View(data2)
#### 1.1a fine-scale 2022 data ####
data2022 = read.csv("Mekong_catfish_binary_data_2022.csv")
data2022 = data2022[1:1944,1:8] # Take away all remarks
data2022
data2022$Date = as.POSIXct(data2022$Date, format = "d/m/y")
head(data2022)
#### 1.1a fine-scale 2022 data ####
data2022 = read.csv("Mekong_catfish_binary_data_2022.csv")
head(data2022)
class(data2022$Date)
data2022$Date = as.POSIXct(data2022$Date, format = "%d/%m/%y")
head(data2022)
data2022 %>%
mutate(month = lubridate::month(Date)) %>%
head()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
head()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
write.csv("cleaned2022.csv")
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "AM") %>%
nrow()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "PM") %>%
nrow()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "PM") %>%
na.omit() %>%
nrow()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "AM") %>%
na.omit() %>%
nrow()
head(data2022)
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "AM") %>%
select(-(Rubbing)) %>%
na.omit() %>%
nrow()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "AM") %>%
select(-c(Rubbing)) %>%
na.omit() %>%
nrow()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "AM") %>%
select(-c("Rubbing")) %>%
na.omit() %>%
nrow()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "AM") %>%
select(-Rubbing) %>%
na.omit() %>%
nrow()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "AM") %>%
dplyr::select(-Rubbing) %>%
na.omit() %>%
nrow()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "PM") %>%
dplyr::select(-Rubbing) %>%
na.omit() %>%
nrow()
dplyr::select(-Rubbing) %>%
na.omit() %>%
nrow()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "PM") %>%
mutate(Feed = ifelse(Pellet_Cake == 1, 1,
ifelse(Fish_Prawn == 1, 1), 0)) %>%
dplyr::select(-Rubbing) %>%
na.omit() %>%
nrow()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "PM") %>%
mutate(Feed = ifelse(Pellet_Cake == 1, 1,
ifelse(Fish_Prawn == 1, 1), 0)) %>% head()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "PM") %>%
mutate(Feed = ifelse(Pellet_Cake = 1, 1,
ifelse(Fish_Prawn = 1, 1), 0)) %>% head()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "PM") %>%
mutate(Feed = ifelse(Pellet_Cake == "1", "1",
ifelse(Fish_Prawn == "1", "1"), "0")) %>% head()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "PM") %>%
mutate(Feed = ifelse(Pellet_Cake %in%  c("1"), "1",
ifelse(Fish_Prawn %in% c("1"), "1"), "0")) %>% head()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "PM") %>%
mutate(Feed = ifelse(Pellet_Cake %in% c(1), "1",
ifelse(Fish_Prawn %in% c(1), "1"), "0")) %>% head()
data2022$Fish_Prawn
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "PM") %>%
mutate(Feed = ifelse(Pellet_Cake %in% c(1), "Yes",
ifelse(Fish_Prawn %in% c(1), "Yes"), "No")) %>% head()
ifelse(Fish_Prawn %in% c(1), "Yes", "No")) %>% head()
ifelse(Fish_Prawn %in% c(1), "Yes", "No") %>% head()
ifelse(Fish_Prawn %in% c(1), "Yes", "No")) %>% head()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "PM") %>%
mutate(Feed = ifelse(Pellet_Cake %in% c(1), "Yes",
ifelse(Fish_Prawn %in% c(1), "Yes", "No"))) %>% head()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "PM") %>%
mutate(Feed = ifelse(Pellet_Cake %in% c(1), "Yes",
ifelse(Fish_Prawn %in% c(1), "Yes", "No"))) %>%
dplyr::select(-Rubbing) %>%
na.omit() %>%
nrow()
data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "AM") %>%
mutate(Feed = ifelse(Pellet_Cake %in% c(1), "Yes",
ifelse(Fish_Prawn %in% c(1), "Yes", "No"))) %>%
dplyr::select(-Rubbing) %>%
na.omit() %>%
nrow()
data2022_cleaned = data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "AM") %>%
mutate(Feed = ifelse(Pellet_Cake %in% c(1), "Yes",
ifelse(Fish_Prawn %in% c(1), "Yes", "No"))) %>%
dplyr::select(-Rubbing) %>%
na.omit() %>%
nrow()
data2022_cleaned = data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "AM") %>%
mutate(Feed = ifelse(Pellet_Cake %in% c(1), "Yes",
ifelse(Fish_Prawn %in% c(1), "Yes", "No"))) %>%
dplyr::select(-Rubbing) %>%
na.omit()
View(data2022_cleaned)
data2022_cleaned = data2022 %>%
mutate(month = lubridate::month(Date),
day = lubridate::day(Date)) %>%
filter(Feeding_Time == "AM") %>%
mutate(Feed = ifelse(Pellet_Cake %in% c(1), 1,
ifelse(Fish_Prawn %in% c(1), 1, 0))) %>%
dplyr::select(-Rubbing) %>%
na.omit()
View(data2022_cleaned)
head(data2022_cleaned)
data2022_cleaned %>%
group_by(month, day) %>%
summarise(total = sum(Feed)) %>%
head()
data2022_cleaned %>%
group_by(month, day) %>%
mutate(total = sum(Feed)) %>%
head()
